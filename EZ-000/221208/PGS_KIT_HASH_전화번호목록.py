def solution(phone_book):
    phone_book.sort()                               # 리스트 정렬, 스트링 타입으로 정렬되기 때문에 앞 뒤 번호만 비교해주면 된다.
    for p1, p2 in zip(phone_book, phone_book[1:]):  # zip을 이용해 (p1=앞, p2=뒤) 튜플로 이루어진 리스트 생성
        if p2.startswith(p1):                           # p2가 p1으로 시작할 때,
            return False                                    # return False, return이 쓰이면 함수 종료
    return True                                     # False인 경우가 없었으면 return True


""" 정확성 테스트
테스트 1 〉	통과 (0.01ms, 9.99MB)
테스트 2 〉	통과 (0.00ms, 10.2MB)
테스트 3 〉	통과 (0.00ms, 10.2MB)
테스트 4 〉	통과 (0.00ms, 10.2MB)
테스트 5 〉	통과 (0.01ms, 10.2MB)
테스트 6 〉	통과 (0.01ms, 10.2MB)
테스트 7 〉	통과 (0.01ms, 10.2MB)
테스트 8 〉	통과 (0.01ms, 10.1MB)
테스트 9 〉	통과 (0.00ms, 10.2MB)
테스트 10 〉	통과 (0.00ms, 10.3MB)
테스트 11 〉	통과 (0.01ms, 10.2MB)
테스트 12 〉	통과 (0.00ms, 10.1MB)
테스트 13 〉	통과 (0.00ms, 10.2MB)
테스트 14 〉	통과 (0.46ms, 10.4MB)
테스트 15 〉	통과 (0.57ms, 10.3MB)
테스트 16 〉	통과 (0.65ms, 10.2MB)
테스트 17 〉	통과 (0.79ms, 10.3MB)
테스트 18 〉	통과 (0.99ms, 10.3MB)
테스트 19 〉	통과 (0.90ms, 10.4MB)
테스트 20 〉	통과 (0.94ms, 10.4MB)
"""

""" 효율성 테스트
테스트 1 〉	통과 (3.09ms, 10.8MB)
테스트 2 〉	통과 (3.25ms, 10.9MB)
테스트 3 〉	통과 (92.81ms, 30.6MB)
테스트 4 〉	통과 (101.65ms, 28.1MB)
"""
